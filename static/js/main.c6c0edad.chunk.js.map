{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","React","memo","total","perPage","currentPage","onPageChange","pageNumbers","Math","ceil","pageArr","i","push","className","classNames","disabled","href","onClick","event","preventDefault","map","page","active","App","useSearchParams","searchParams","setSearchParams","searchPage","get","searchPerPage","firstItemPerPage","lastItemPerPage","items","from","to","numbers","n","getNumbers","id","value","onChange","newPerPage","currentTarget","val","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mOAYaA,EAA8BC,IAAMC,MAAK,YASpD,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAU,GAEPC,EAAI,EAAGA,GAAKJ,EAAaI,IAChCD,EAAQE,KAAKD,GAGf,OACE,mCACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACnCC,SAA0B,IAAhBV,IADd,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,IACLC,QAAS,SAACC,GACRA,EAAMC,iBACNb,EAAaD,EAAc,IAN/B,oBAaDK,EAAQU,KAAI,SAAAC,GACX,OACE,oBACER,UAAWC,IAAW,YAAa,CACnCQ,OAAQD,IAAShB,IAFnB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,IACLC,QAAS,SAACC,GACRA,EAAMC,iBACNb,EAAae,IANjB,SASGA,KAXEA,MAiBX,oBAAIR,UAAWC,IAAW,YAAa,CACnCC,SAAUV,IAAgBE,IAD9B,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,IACL,gBAAeX,IAAgBE,EAAc,OAAS,QACtDU,QAAS,SAACC,GACRA,EAAMC,iBACNb,EAAaD,EAAc,IAP/B,4BClEH,IAAMkB,EAAgB,WAC3B,MAAwCC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,IAAeF,EAAaG,IAAI,SAAW,GAC3CC,IAAkBJ,EAAaG,IAAI,YAAc,GAkBjDE,GAAoBH,EAAa,GAAKE,EAAgB,EACtDE,EACJJ,EAAaE,EAHI,MAKbF,EAAaE,EAEbG,ECjCD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQvB,KAAKwB,GAGf,OAAOD,ED0BOE,CAAWP,EAAkBC,GACxCX,KAAI,SAAAgB,GAAC,qBAAYA,MAEpB,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWc,EADX,mBACgCG,EADhC,cACsDC,EADtD,eAde,GAcf,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOV,EACPW,SAvCW,SAACtB,GACpB,IAAMuB,EAAavB,EAAMwB,cAAcH,OAElCE,IAAeZ,GAClBH,EAAgB,CAAEL,KAAM,IAAKjB,QAASqC,KA8BlC,SApCc,CAAC,EAAG,EAAG,GAAI,IA4CRrB,KAAI,SAAAuB,GAAG,OACpB,wBAAkBJ,MAAK,UAAKI,GAA5B,SAAoCA,GAAvBA,UAKnB,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAACb,EAAD,CACEG,MAxCa,GAyCbC,QAASyB,EACTxB,YAAasB,EACbrB,aAjDc,SAACe,GACfA,IAASM,GACXD,EAAgB,CAAEL,KAAK,GAAD,OAAKA,GAAQjB,QAAQ,GAAD,OAAKyB,QAkD/C,6BACGG,EAAMZ,KAAI,SAAAyB,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEtElCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6c0edad.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/indent */\n/* eslint-disable no-plusplus */\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = React.memo(({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = Math.ceil(total / perPage);\n  const pageArr = [];\n\n  for (let i = 1; i <= pageNumbers; i++) {\n    pageArr.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"/\"\n            onClick={(event) => {\n              event.preventDefault();\n              onPageChange(currentPage - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pageArr.map(page => {\n          return (\n            <li\n              className={classNames('page-item', {\n              active: page === currentPage,\n            })}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href=\"/\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  onPageChange(page);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={classNames('page-item', {\n            disabled: currentPage === pageNumbers,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"/\"\n            aria-disabled={currentPage === pageNumbers ? 'true' : 'false'}\n            onClick={(event) => {\n              event.preventDefault();\n              onPageChange(currentPage + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n});\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchPage = +(searchParams.get('page') || 1);\n  const searchPerPage = +(searchParams.get('perPage') || 5);\n  const perPageValues = [3, 5, 10, 20];\n\n  const handleChange = (event: React.FormEvent<HTMLSelectElement>) => {\n    const newPerPage = event.currentTarget.value;\n\n    if (+newPerPage !== searchPerPage) {\n      setSearchParams({ page: '1', perPage: newPerPage });\n    }\n  };\n\n  const handleClick = (page: number) => {\n    if (page !== searchPage) {\n      setSearchParams({ page: `${page}`, perPage: `${searchPerPage}` });\n    }\n  };\n\n  const totalItems = 42;\n  const firstItemPerPage = (searchPage - 1) * searchPerPage + 1;\n  const lastItemPerPage = (\n    searchPage * searchPerPage > totalItems\n      ? totalItems\n      : searchPage * searchPerPage\n  );\n  const items = getNumbers(firstItemPerPage, lastItemPerPage)\n    .map(n => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${searchPage} (items ${firstItemPerPage} - ${lastItemPerPage} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={searchPerPage}\n            onChange={handleChange}\n          >\n\n            {perPageValues.map(val => (\n              <option key={val} value={`${val}`}>{val}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={searchPerPage}\n        currentPage={searchPage}\n        onPageChange={handleClick}\n      />\n\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}